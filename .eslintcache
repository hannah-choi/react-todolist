[{"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/index.js":"1","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/reportWebVitals.js":"2","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/TodoProvider.js":"3","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/App.js":"4","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/List.js":"5","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/Input.js":"6","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ListItem.js":"7","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/theme.js":"8","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/Global.js":"9","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ThemeToggle.js":"10","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/Progress.js":"11","/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ProgressManager.js":"12"},{"size":604,"mtime":1612655366507,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609171100550,"results":"15","hashOfConfig":"14"},{"size":1697,"mtime":1613604743611,"results":"16","hashOfConfig":"14"},{"size":960,"mtime":1613608014459,"results":"17","hashOfConfig":"14"},{"size":331,"mtime":1612655378036,"results":"18","hashOfConfig":"14"},{"size":555,"mtime":1612655358010,"results":"19","hashOfConfig":"14"},{"size":1253,"mtime":1613607059633,"results":"20","hashOfConfig":"14"},{"size":245,"mtime":1612655173540,"results":"21","hashOfConfig":"14"},{"size":882,"mtime":1613609091073,"results":"22","hashOfConfig":"14"},{"size":520,"mtime":1613602673432,"results":"23","hashOfConfig":"14"},{"size":600,"mtime":1613609031932,"results":"24","hashOfConfig":"14"},{"size":2528,"mtime":1613610564127,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1w5fq7w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/index.js",[],["52","53"],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/reportWebVitals.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/TodoProvider.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/App.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/List.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/Input.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ListItem.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/theme.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/Global.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ThemeToggle.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/Progress.js",[],"/Users/hannah/Documents/LearningJS/reactPractice/todolist3/src/components/ProgressManager.js",["54","55","56","57","58","59"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { useTodo } from \"../TodoProvider\";\n\nfunction Progress({ todo, progress, toggle, completed }) {\n    const complete = (\n        <>\n            {todo}: <div>{\"Completed ðŸŸ¢\"}</div>\n        </>\n    );\n    const progressButton = (\n        <>\n            {todo}:{\" \"}\n            <div onClick={toggle}>\n                {progress ? \"Almost done ðŸŸ¡\" : \"In progress ðŸ”´\"}\n            </div>\n        </>\n    );\n\n    console.log({ todo, progress });\n    return <>{completed ? complete : progressButton}</>;\n}\n\nexport default function ProgressManager() {\n    const { todos } = useTodo();\n\n    Progress = React.memo(Progress);\n\n    const [progress1, setProgress1] = useState(true);\n    const [progress2, setProgress2] = useState(true);\n    const [progress3, setProgress3] = useState(true);\n    const [progress4, setProgress4] = useState(true);\n\n    const handleToggle1 = useCallback(() => {\n        setProgress1(!progress1);\n    }, [progress1, todos[0].completed]);\n    const handleToggle2 = useCallback(() => {\n        setProgress2(!progress2);\n    }, [progress2, todos[1].completed]);\n    const handleToggle3 = useCallback(() => {\n        setProgress3(!progress3);\n    }, [progress3, todos[2].completed]);\n    const handleToggle4 = useCallback(() => {\n        setProgress4(!progress4);\n    }, [progress4, todos[3].completed]);\n\n    return (\n        <>\n            <h4>Progress Report</h4>\n            {todos[0] && (\n                <Progress\n                    todo={todos[0].task}\n                    completed={todos[0].completed}\n                    progress={progress1}\n                    toggle={handleToggle1}\n                />\n            )}\n            {todos[1] && (\n                <Progress\n                    todo={todos[1].task}\n                    completed={todos[1].completed}\n                    progress={progress2}\n                    toggle={handleToggle2}\n                />\n            )}\n            {todos[2] && (\n                <Progress\n                    todo={todos[2].task}\n                    completed={todos[2].completed}\n                    progress={progress3}\n                    toggle={handleToggle3}\n                />\n            )}\n            {todos[3] && (\n                <Progress\n                    todo={todos[3].task}\n                    completed={todos[3].completed}\n                    progress={progress4}\n                    toggle={handleToggle4}\n                />\n            )}\n        </>\n    );\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":40,"nodeType":"66","messageId":"67","endLine":1,"endColumn":49},{"ruleId":"68","severity":1,"message":"69","line":26,"column":5,"nodeType":"66","messageId":"70","endLine":26,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":35,"column":20,"nodeType":"73","endLine":35,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":38,"column":20,"nodeType":"73","endLine":38,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":41,"column":20,"nodeType":"73","endLine":41,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":44,"column":20,"nodeType":"73","endLine":44,"endColumn":38},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-func-assign","'Progress' is a function.","isAFunction","react-hooks/exhaustive-deps","React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-global-assign","no-unsafe-negation"]